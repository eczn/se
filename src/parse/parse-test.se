;; 定义数据结构 pair 
(define cons
    (lambda (x y)
        (lambda (m)
            (m x y))))

;；取出 pair 的左边
(define car
    (lambda (pair) 
        (pair (lambda (l r) l))))

;; 取出 pair 的右边
(define cdr
    (lambda (pair)
        (pair (lambda (l r) r))))


;; 定义 xy 
(define xy (cons 1 2))

(log xy)
;; (1 . 2)

(log (car xy))
;; => 1

(log (cdr xy))
;; => 2


(define lst
    (cons 1 (cons 2 (cons 3 4))))
;; 你最爱的链表

(log lst)

; (log (car (cons 1 2)))

; (define (cons x y)
;     (lambda (m) (m x y)))

; (define (car z)
;     (z (lambda (p q) p)))

; (define (cdr z)
;     (z (lambda (p q) q)))

